=begin
#Reseplaneraren

#Provides access to VÃ¤sttrafik journey planner

OpenAPI spec version: 1.10.1

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.28

=end

require 'uri'

module SwaggerClient
  class GeometryApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Returns the polyline for a leg.
    # Returns the polyline for a leg. This service can not be called directly but only by reference URLs in a result of a trip or JourneyDetail request. The result contains a list of WGS84 coordinates which can be used to display the polyline on a map.If the parameter needItinerary=1 is passed in the URL of the trip request that contained the reference to the Geometry service, the geometry reference link will also contain an itinerary for walk, bike and car legs, that can be used to generate turn-by-turn instructions.
    # @param ref the ref query parameter, URL decoded, from a URL retrieved as a result of a trip or JourneyDetail request
    # @param [Hash] opts the optional parameters
    # @return [Geometry]
    def get_geometry(ref, opts = {})
      data, _status_code, _headers = get_geometry_with_http_info(ref, opts)
      data
    end

    # Returns the polyline for a leg.
    # Returns the polyline for a leg. This service can not be called directly but only by reference URLs in a result of a trip or JourneyDetail request. The result contains a list of WGS84 coordinates which can be used to display the polyline on a map.If the parameter needItinerary&#x3D;1 is passed in the URL of the trip request that contained the reference to the Geometry service, the geometry reference link will also contain an itinerary for walk, bike and car legs, that can be used to generate turn-by-turn instructions.
    # @param ref the ref query parameter, URL decoded, from a URL retrieved as a result of a trip or JourneyDetail request
    # @param [Hash] opts the optional parameters
    # @return [Array<(Geometry, Fixnum, Hash)>] Geometry data, response status code and response headers
    def get_geometry_with_http_info(ref, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: GeometryApi.get_geometry ...'
      end
      # verify the required parameter 'ref' is set
      if @api_client.config.client_side_validation && ref.nil?
        fail ArgumentError, "Missing the required parameter 'ref' when calling GeometryApi.get_geometry"
      end
      # resource path
      local_var_path = '/geometry'

      # query parameters
      query_params = {}
      query_params[:'ref'] = ref

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/xml', 'application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Geometry')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GeometryApi#get_geometry\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
